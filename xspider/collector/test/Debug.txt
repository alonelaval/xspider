# Spider Single Debug

from execute.douban_spider import *
spider = Spider()
task = spider.start_generator()
print task

resp = spider.start_downloader(task[0].get("url"),task[0].get("args",{}))

result = spider.start_parser(resp,spider.parser_1)

for k,v in result.items():
    print k,v


# Utils Debug

from collector.utils import *
from collector.models import Project

project = Project.objects(name="douban").first()
print project.name
project_id = str(project.id)
project.update(status=2)

generator = Generator(project_id)
task = generator.run_generator()
print task

processor = Processor(task=task["result"])
result = processor.run_processor()
print result

# Utils Run

from collector.utils import *
from collector.models import Project

project = Project.objects(name="sina").first()
print project.name
project_id = str(project.id)
project.update(status=1)

generator = Generator(project_id)
task = generator.run_generator()
print task

processor = Processor(_id="58b501ba401010ee54168f07",project_id="58b3de424010104df43f7313")
result = processor.run_processor()
print result



## Worker Queue Debug

# start worker
 celery worker --app=xspider -l info -n worker1@%h -Q low-generator
 celery worker --app=xspider -l info -n worker2@%h -Q low-processor


# start flower
celery -A xspider flower


# scheduler debug

from scheduler.scheduler import XspiderScheduler

xs = XspiderScheduler()
xs.run_generator_dispatch()
xs.run_processor_dispatch()


